<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lost in mind</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-30T08:53:50.975Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Cosmic Dust</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>装修个人博客中的一点废弃物</title>
    <link href="http://example.com/2022/04/30/%E8%A3%85%E4%BF%AE%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%AD%E7%9A%84%E4%B8%80%E7%82%B9%E5%BA%9F%E5%BC%83%E7%89%A9/"/>
    <id>http://example.com/2022/04/30/装修个人博客中的一点废弃物/</id>
    <published>2022-04-30T08:12:19.000Z</published>
    <updated>2022-04-30T08:53:50.975Z</updated>
    
    <content type="html"><![CDATA[<p>用来记录装修博客时候的智慧或者犯蠢时刻。</p><h1 id="博客主题修改"><a href="#博客主题修改" class="headerlink" title="博客主题修改"></a>博客主题修改</h1><h2 id="禁止爬虫抓取"><a href="#禁止爬虫抓取" class="headerlink" title="禁止爬虫抓取"></a>禁止爬虫抓取</h2><p>在Hexo根目录里面找到public文件夹，添加“robots.txt”，文本内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /</span><br></pre></td></tr></table></figure><p>保存后hexo三连。</p><h2 id="头像图片格式"><a href="#头像图片格式" class="headerlink" title="头像图片格式"></a>头像图片格式</h2><p>头像图片上传一直失败，文件位置未错误，代码未错误，hexo三连未报错，但就是不显示。</p><p>把JPG后缀直接改成PNG，解决。</p><h2 id="添加Algolia搜索"><a href="#添加Algolia搜索" class="headerlink" title="添加Algolia搜索"></a>添加Algolia搜索</h2><p>（此部分主要参考<a href="https://www.heson10.com/posts/51572.html">为Hexo增加algolia搜索功能</a>和<a href="https://weikeqin.com/2017/03/13/hexo-build-blog/#6-3-Please-provide-an-application-ID-Usage-algoliasearch-applicationID-apiKey-opts">hexo搭建博客6.3</a>，我个人改动之处用阴影标出）</p><h3 id="注册Algolia"><a href="#注册Algolia" class="headerlink" title="注册Algolia"></a>注册Algolia</h3><ul><li><a href="https://www.algolia.com/">官网</a>注册</li><li>新建一个index，命名记住下面要用。</li><li>setting里找到API Keys，进入后，点击ALL API Keys<strong>（这点比较重要，因为前面的API不可用，要自己新建一个拥有增加删除权限的api key）</strong>。</li><li>创建新API keys，重要的是在ACL里面增加删除和新增Object的权限，填上indices栏目中的index name（即刚刚新建的index名）。</li></ul><h3 id="安装algolia搜索功能"><a href="#安装algolia搜索功能" class="headerlink" title="安装algolia搜索功能"></a>安装algolia搜索功能</h3><ul><li>在Hexo工程根目录下执行下面的语句。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algolia --save</span><br></pre></td></tr></table></figure><ul><li><p>在Hexo根目录的_config.yml中加入algolia的配置，注意改成前面API Keys页面相应配置。</p><p>这里注意apikey填写刚才你创建的那个有权限的，其余的在your api keys里面可以找到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: &#x27;your applicationID&#x27;</span><br><span class="line">  apiKey: &#x27;your apiKey&#x27;</span><br><span class="line">  adminApiKey: &#x27;your adminApiKey&#x27;</span><br><span class="line">  indexName: &#x27;your indexName&#x27;</span><br><span class="line">  chunkSize: 5000</span><br></pre></td></tr></table></figure><table><tr><td bgcolor=lightgrey>此处注意“applicationID”不能换成”appID”！<br>我为我的偷懒付出了惨痛的代价呜呜</td></tr></table></li><li><p>上传数据到algolia，下面your apiKey替换为刚才自己创建拥有权限的api。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">export HEXO_ALGOLIA_INDEXING_KEY=your apiKey</span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><table><tr><td bgcolor=lightgrey>Linux下 export HEXO_ALGOLIA_INDEXING_KEY=xxx(对应的apikey)<br>Windows下 set HEXO_ALGOLIA_INDEXING_KEY=xxx(对应的apikey)</td></tr></table></li></ul><h3 id="到Hexo开启algolia"><a href="#到Hexo开启algolia" class="headerlink" title="到Hexo开启algolia"></a>到Hexo开启algolia</h3><ul><li>主题目录下的_config.yml，修改为开启。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h1 id="Typora相关"><a href="#Typora相关" class="headerlink" title="Typora相关"></a>Typora相关</h1><h2 id="Front-matter相关"><a href="#Front-matter相关" class="headerlink" title="Front matter相关"></a>Front matter相关</h2><h3 id="如何改变所有新生成md文件的front-matter"><a href="#如何改变所有新生成md文件的front-matter" class="headerlink" title="如何改变所有新生成md文件的front matter"></a>如何改变所有新生成md文件的front matter</h3><p>在根目录中找到scaffolds文件夹，修改其中post.md的front matter并保存。</p><h3 id="多个标签怎样分开"><a href="#多个标签怎样分开" class="headerlink" title="多个标签怎样分开"></a>多个标签怎样分开</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line"></span><br><span class="line">- GitHub </span><br><span class="line"></span><br><span class="line">- Hexo</span><br></pre></td></tr></table></figure><h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><p>以我目前的水平，一定要用图床！</p><h3 id="文字背景阴影"><a href="#文字背景阴影" class="headerlink" title="文字背景阴影"></a>文字背景阴影</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">lightgrey</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">换行为<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>文件—偏好设置—Markdown—打开”高亮“选项。</p><p>文件—偏好设置—外观—打开主题文件夹—github.css—在最后添加代码如下。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#db3f1e</span>;</span><br><span class="line"><span class="attribute">font-weight</span>: bold;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">0px</span> solid <span class="number">#ffffff</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0.0px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>颜色可以自行设置。</p><p>==示例==</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用来记录装修博客时候的智慧或者犯蠢时刻。&lt;/p&gt;
&lt;h1 id=&quot;博客主题修改&quot;&gt;&lt;a href=&quot;#博客主题修改&quot; class=&quot;headerlink&quot; title=&quot;博客主题修改&quot;&gt;&lt;/a&gt;博客主题修改&lt;/h1&gt;&lt;h2 id=&quot;禁止爬虫抓取&quot;&gt;&lt;a href=&quot;#禁止爬
      
    
    </summary>
    
      <category term="新手上路" scheme="http://example.com/categories/%E6%96%B0%E6%89%8B%E4%B8%8A%E8%B7%AF/"/>
    
    
      <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>关于用Github+Hexo搭建个人博客的记录</title>
    <link href="http://example.com/2022/04/29/%E5%85%B3%E4%BA%8E%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2022/04/29/关于用Github-Hexo搭建个人博客的记录/</id>
    <published>2022-04-29T12:07:36.000Z</published>
    <updated>2022-04-30T08:30:59.482Z</updated>
    
    <content type="html"><![CDATA[<p>第一次尝试搭建个人博客，研究了一下最后还是选择了Github+Hexo的方式。作为一个完全的小白稍微记录一下自己的试错过程。</p><p>个人系统为Windows。</p><h1 id="Github上配置Hexo"><a href="#Github上配置Hexo" class="headerlink" title="Github上配置Hexo"></a>Github上配置Hexo</h1><p>这部分内容基本参考了<a href="https://gist.github.com/paracide/c19dbd9e4f637e72770094ae4769db4c">Github上配置Hexo 3.0</a>，简洁明了。部分不同之处会额外标出。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><a href="https://nodejs.org/en/">Node.js</a> 推荐下载msi格式稳定版，新版已经会自动配置Path</li><li><a href="https://desktop.github.com/">Github Desktop</a> Github官方出品 不需要再去配置SSH KEY ，但在线安装模式不开翻墙会有些麻烦</li></ul><h3 id="Git-Shell操作"><a href="#Git-Shell操作" class="headerlink" title="Git Shell操作"></a>Git Shell操作</h3><ul><li><p>打开桌面上的Git Shell,之后的操作都在这上面完成</p><table><tr><td bgcolor=lightgrey>Windows系统为打开cmd，其后所有Git shell均为cmd。</td></tr></table></li></ul><h3 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在Git Shell输入以下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><ul><li>根据喜好创建一个文件夹（F:\GitHub\hexo）用于放置你的hexo</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd F:\GitHub\hexo</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="安装Hexo插件"><a href="#安装Hexo插件" class="headerlink" title="安装Hexo插件"></a>安装Hexo插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">#复合命令</span><br><span class="line">hexo s -g </span><br></pre></td></tr></table></figure><p>完成会提示你在 0.0.0.0:4000查看，但会无法显示，去<a href="http://localhost:4000/">localhost:4000/</a>查看</p><h2 id="部署静态网页到GitHub"><a href="#部署静态网页到GitHub" class="headerlink" title="部署静态网页到GitHub"></a>部署静态网页到GitHub</h2><h3 id="Github建立仓库"><a href="#Github建立仓库" class="headerlink" title="Github建立仓库"></a>Github建立仓库</h3><ul><li><p>创建一个<a href="https://github.com/">Github</a>账号</p></li><li><p>创建仓库，<a href="https://github.com/new">new repository</a>,Repository name的格式必须是你的<strong>username.github.io</strong>（我之前把username错打成paraicde一直没发现，导致卡部署卡了好几天） </p><table><tr><td bgcolor=lightgrey>创建new repository必须为public，README可选。</td></tr></table></li></ul><h3 id="部署deploy"><a href="#部署deploy" class="headerlink" title="部署deploy"></a>部署deploy</h3><ul><li>打开hexo_config.yml,修改最后一段,把所有的paracide改成你的username</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/paracide/paracide.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="上传Github"><a href="#上传Github" class="headerlink" title="上传Github"></a>上传Github</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line">#复合代码</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>第一次提交需要等到5分钟+，然后就可以看到你的静态博客了（例如paracide.github.io）</p><table><tr><td bgcolor=lightgrey>这一步我出现了err: Error: Spawn failed. <br>原因：<br>推测是为了上GitHub挂了代理，代理影响。<br>解决方法：<br>尝试了网上的各种方法，Linux使用rm -rf语句删除git提交内容文件夹（失败，系统不匹配），Windows使用rmdir语句（失败，提示不是内部或外部命令，也不是可运行的程序，或批处理文件）。<br>最后通过断开重连或更换代理的方式解决。简而言之，坐等。</td></tr></table><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>这部分内容基本上参考了<a href="https://jackmezone.medium.com/namesilo-guide-2b7859157556">Namesilo 中文教程：域名购买及解析使用方法 | Namesilo 优惠码</a>和<a href="https://blog.csdn.net/qq_44161695/article/details/117605288">使用Hexo搭建个人博客，绑定GitHub以及个人域名</a>，其中有部分内容已经老旧（比如说优惠码TAT）。不同之处会额外标出。</p><h2 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h2><p>进入 <a href="https://www.namesilo.com/?rid=d27fa32do">Namesilo</a> ，点击右上角 <strong>“Create New Account”</strong> 注册账号。</p><h2 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h2><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>激活账户并登陆，进入主页，在搜索框中输入想要注册的域名，<strong>“SEARCH”</strong>。</p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>勾选需要的域名后缀，<strong>“REGISTER”</strong>。如果该域名已被注册，会显示为橙色的 “Registered” 状态，绿色表示可注册。</p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>确认订单，设置域名续费规则、注册时长等。</p><h3 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h3><p>付款。</p><h1 id="域名解析-设置DNS服务器"><a href="#域名解析-设置DNS服务器" class="headerlink" title="域名解析 / 设置DNS服务器"></a>域名解析 / 设置DNS服务器</h1><p>域名注册购买成功后，我们就可以把域名解析到服务器了。</p><p>这里我们可以直接在后台解析域名；也可以使用其它解析服务，然后更改 DNS 服务器地址。</p><p><img src="https://i.postimg.cc/NjDShZz1/namesilo.png" alt="参考步骤"></p><h3 id="使用-Namesilo-解析域名"><a href="#使用-Namesilo-解析域名" class="headerlink" title="使用 Namesilo 解析域名"></a>使用 Namesilo 解析域名</h3><p>点击 蓝色小球，编辑 DNS，可以自己设置，也可以使用下面提供的模版。一般设置example.com和 <code>www.example.com</code>指向自己的服务器 IP 地址就够用了。</p><table><tr><td bgcolor=lightgrey>在这里需注意Namesilo会自动生成五条记录，在配置完成自己的服务器IP地址之后，一定要删除多余的Resources Records。</td></tr></table><h3 id="Hexo配置域名"><a href="#Hexo配置域名" class="headerlink" title="Hexo配置域名"></a>Hexo配置域名</h3><p>在自己博客的跟目录source文件夹下创建一个名字CNAME记事本</p><p>内容输入自己的个人域名，保存关闭。删除后缀.txt</p><h3 id="仓库绑定域名"><a href="#仓库绑定域名" class="headerlink" title="仓库绑定域名"></a>仓库绑定域名</h3><p>在GitHub中找到自己的博客仓库，点击setting，拉到最下面找到GitHub Pages点进去</p><p>在Custom domain输入自己的域名save一下即可，效果如下就说明配置成功了</p><table><tr><td bgcolor=lightgrey>在这里我遇到了GitHub的报错：”both cosmicdust42.com and its alternate name are improperly configured. Domain does not resolve to the GitHub Pages server”.<br>原因：应该是生效时间较长。<br>解决方法：继续坐等……</td></tr></table><p>大致的搭建过程如上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;第一次尝试搭建个人博客，研究了一下最后还是选择了Github+Hexo的方式。作为一个完全的小白稍微记录一下自己的试错过程。&lt;/p&gt;
&lt;p&gt;个人系统为Windows。&lt;/p&gt;
&lt;h1 id=&quot;Github上配置Hexo&quot;&gt;&lt;a href=&quot;#Github上配置Hexo&quot; c
      
    
    </summary>
    
      <category term="新手上路" scheme="http://example.com/categories/%E6%96%B0%E6%89%8B%E4%B8%8A%E8%B7%AF/"/>
    
    
      <category term="编程" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
